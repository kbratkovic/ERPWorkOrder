@page "/selectSparePartDialog"

@inject SparePartModel SparePart;
@inject DialogService DialogService
@inject NavigationManager NavigationManager

@inherits OwningComponentBase<ISparePartRepository>


<PageTitle>Rezervni dijelovi</PageTitle>

<RadzenCard>
    <table class="table table-striped table-bordered table-sm">
        <thead>
            <tr>
                <th scope="col">Rb.</th>
                <th scope="col">Šifra</th>
                <th scope="col">Opis</th>
                <th scope="col">Količina</th>
                <th scope="col">Jed. mjere</th>
                <th scope="col">Cijena vpc</th>
                <th scope="col">Cijena mpc</th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            @if (SparePartsData?.Count() > 0)
            {
                foreach (var sparePart in SparePartsData)
                {
                    orderNumber++;
                    <tr>
                        <td>@orderNumber</td>
                        <td>@sparePart.Code</td>
                        <td>@sparePart.Description</td>
                        <td>@sparePart.Quantity</td>
                        <td>@sparePart.UnitOfMeasure</td>
                        <td>@sparePart.PriceWithoutVAT</td>
                        <td>@sparePart.PriceWithVAT</td>
                        <td class="text-center"><RadzenButton Click="@((args) => DialogService.Close(sparePart.Code))" Text="Odaberi" /></td>
                    </tr>
                }
            }
        </tbody>
    </table>
</RadzenCard>



@code {

    private int orderNumber;
    private ISparePartRepository Repository => Service;
    public IEnumerable<SparePartModel> SparePartsData { get; set; } = Enumerable.Empty<SparePartModel>();


    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
        orderNumber = 0;

    }


    public async Task UpdateData()
    {
        SparePartsData = await Repository.SpareParts.ToListAsync();
    }

}
