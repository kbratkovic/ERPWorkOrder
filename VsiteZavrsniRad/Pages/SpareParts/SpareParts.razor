@page "/spareParts"

@inject SparePartModel SparePart;
@inject DialogService DialogService
@inject NavigationManager NavigationManager

@inherits OwningComponentBase<ISparePartRepository>


<PageTitle>Rezervni dijelovi</PageTitle>

<NavLink href="@CreateNewSparePart" class="btn mb-4">
    <RadzenButton Text="Novi rezervni dio" ButtonStyle="ButtonStyle.Secondary" />
</NavLink>


@*<RadzenButton Text="Open dialog" ButtonStyle="ButtonStyle.Secondary" Click=@OpenOrder />*@


<table class="table table-striped table-bordered table-sm">
    <thead>
        <tr>
            <th scope="col">Rb.</th>
            <th scope="col">Šifra</th>
            <th scope="col">Opis</th>
            <th scope="col">Kličina</th>
            <th scope="col">Cijena vpc</th>
            <th scope="col">Cijena mpc</th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody>
        @if (SparePartsData?.Count() > 0)
        {
            foreach (var sparePart in SparePartsData)
            {
                orderNumber++;
                <tr>
                    <td>@orderNumber</td>
                    <td>@sparePart.Code</td>
                    <td>@sparePart.Description</td>
                    <td>@sparePart.Quantity</td>
                    <td>@sparePart.PriceWithoutVAT</td>
                    <td>@CalculatePriceWithVAT(sparePart.PriceWithoutVAT)</td>
                    <td class="text-center"><NavLink class="btn btn-warning" href="@EditSparePart(sparePart.Id)">Uredi</NavLink></td>
                </tr>
            }
        }
    </tbody>
</table>



@code {

    private int orderNumber;
    private ISparePartRepository Repository => Service;
    public IEnumerable<SparePartModel> SparePartsData { get; set; } = Enumerable.Empty<SparePartModel>();

    
    protected async override Task OnInitializedAsync()
    {
        orderNumber = 0;
        await UpdateData();
    }


    public async Task UpdateData()
    {
        SparePartsData = await Repository.SpareParts.ToListAsync();
    }


    public string CreateNewSparePart => $"/sparePart/create";

    public string EditSparePart(int id) => $"/sparePart/edit/{id}";


    private string CalculatePriceWithVAT(decimal price)
    {
        decimal tax = VAT.VATvalue;
        decimal priceWithVAT = (price * tax) + price;
        return priceWithVAT.ToString("0.00");
    }


    // RadzenDialog Demo
    //public int orderID = 12345;

    //public async Task OpenOrder()
    //{
    //    await DialogService.OpenAsync<Clients>($"Order {orderID}", null, null);
    //}


}
